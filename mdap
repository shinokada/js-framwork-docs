#!/usr/bin/env bash

# Title:         JS Frameworks Docs Generator
# Description:   This script generates PDF docs from various js frameworks.
# Author:        Shinichi Okada <okada.shin@gmail.com>
# Date:          2022-11-11

set -eu
VERSION="0.5.0"
SCRIPT_NAME=$(basename "$0")

# Set variables
DOCUMENTS="pdf"
VIVLIOSTYLE=".vivliostyle"
WEBDIR="/Users/shinichiokada/Vivliostyle/read-html-download-pdf/"
APPDIR="docs/frameworks"
WEBAPP="${WEBDIR}${APPDIR}"

# Keep readlinkf function
readlinkf() {
    [ "${1:-}" ] || return 1
    max_symlinks=40
    CDPATH='' # to avoid changing to an unexpected directory

    target=$1
    [ -e "${target%/}" ] || target=${1%"${1##*[!/]}"} # trim trailing slashes
    [ -d "${target:-/}" ] && target="$target/"

    cd -P . 2>/dev/null || return 1
    while [ "$max_symlinks" -ge 0 ] && max_symlinks=$((max_symlinks - 1)); do
        if [ ! "$target" = "${target%/*}" ]; then
            case $target in
            /*) cd -P "${target%/*}/" 2>/dev/null || break ;;
            *) cd -P "./${target%/*}" 2>/dev/null || break ;;
            esac
            target=${target##*/}
        fi

        if [ ! -L "$target" ]; then
            target="${PWD%/}${target:+/}${target}"
            printf '%s\n' "${target:-/}"
            return 0
        fi
        link=$(ls -dl -- "$target" 2>/dev/null) || break
        target=${link#*" $target -> "}
    done
    return 1
}

self=$(readlinkf "$0")
script_dir=${self%/*}
# For Debian APT remove line 7 to 38 and use the following line to
# define the script_dir
# script_dir="/usr/share/shellscript_template"

# Import files
# shellcheck disable=SC1091
{
    . "${script_dir}/lib/getoptions.sh"
    . "${script_dir}/lib/main_definition.sh"
    . "${script_dir}/lib/utils.sh"
    . "${script_dir}/lib/framework_definition.sh"
    . "${script_dir}/lib/create_definition.sh"
    . "${script_dir}/lib/utils_sveltekit.sh"
    . "${script_dir}/lib/utils_pnpm.sh"
    . "${script_dir}/lib/utils_react.sh"
    . "${script_dir}/lib/utils_svelte.sh"
    . "${script_dir}/lib/utils_sveltekit.sh"
    . "${script_dir}/lib/utils_nuxt.sh"
    . "${script_dir}/lib/utils_vite.sh"
    . "${script_dir}/lib/utils_slidev.sh"
    # import only one of helpers file
    # . "${script_dir}/lib/shell_helpers.sh"
    # or
    . "${script_dir}/lib/bash_helpers.sh"
}

# Keep it. You need this for main parser.
eval "$(getoptions parser_definition parse "$0") exit 1"
parse "$@"
eval "set -- $REST"

# CHECK ENVIRONMENT
# If you need to check OS uncomment this
# if [ "$(uname)" = "Linux" ]; then
#     echo "Your OS is Linux."
# elif [ "$(uname)" = "Darwin" ]; then
#     echo "Your OS is mac."
# fi

# If you are using Bash, check Bash version
check_bash 5

# Check dependencies of your script
check_cmd vivliostyle
check_cmd pdfunite
check_cmd ebook-convert
check_cmd tiged

# Add more commands.
# Don't forget to add your command in lib/main_definition.sh
if [ $# -gt 0 ]; then
    cmd=$1
    shift
    case $cmd in
    all)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/all.sh"
        fn_all "$@"
        ;;
    create)
        eval "$(getoptions parser_definition_create parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/create.sh"
        fn_create "$@"
        ;;
    express)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/express.sh"
        fn_express "$@"
        ;;
    nuxt)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/nuxt.sh"
        fn_nuxt "$@"
        ;;
    react)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/react.sh"
        fn_react "$@"
        ;;
    slidev)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/slidev.sh"
        fn_slidev "$@"
        ;;
    svelte)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/svelte.sh"
        fn_svelte "$@"
        ;;
    svelte5)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/svelte5.sh"
        fn_svelte5 "$@"
        ;;
    sveltekit)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/sveltekit.sh"
        fn_sveltekit "$@"
        ;;
    vitest)
        eval "$(getoptions parser_definition_framework parse "$0")"
        parse "$@"
        eval "set -- $REST"
        # shellcheck disable=SC1091
        . "${script_dir}/src/vitest.sh"
        fn_vitest "$@"
        ;;
    # more lines
    --) ;; # no subcommand, arguments only
    esac
fi
